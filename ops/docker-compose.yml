version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: gochurch_postgres
    environment:
      POSTGRES_DB: fastapi_celery_db
      POSTGRES_USER: fastapi_user
      POSTGRES_PASSWORD: fastapi_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - gochurch_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastapi_user -d fastapi_celery_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: gochurch_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    # volumes:
    #   - redis_data:/data
    networks:
      - gochurch_network


  # FastAPI Application
  fastapi:
    build:
      context: ..
      dockerfile: ops/Dockerfile
    container_name: gochurch_fastapi
    environment:
      - DATABASE_URL=postgresql://fastapi_user:fastapi_password@postgres:5432/fastapi_celery_db
      - DEBUG=False
      - ENVIRONMENT=production
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gochurch_network
    volumes:
      - ../config/alembic:/app/config/alembic
    restart: unless-stopped
    command: sh -c "poetry install --only=main && poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  # Celery Worker
  celery:
    build:
      context: ..
      dockerfile: ops/Dockerfile
    container_name: gochurch_celery
    environment:
      - DATABASE_URL=postgresql://fastapi_user:fastapi_password@postgres:5432/fastapi_celery_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DEBUG=False
      - ENVIRONMENT=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gochurch_network
    restart: unless-stopped
    command: sh -c "poetry install --only=main && poetry run celery -A app.core.celery_app worker --loglevel=info"

volumes:
  postgres_data:
  redis_data:

networks:
  gochurch_network:
    driver: bridge
